import discord
from discord.ext import commands
from discord import app_commands
from ..modals.question import Question
from ..utils.event import Event
from ..utils.embed import Embed
from ..utils.server import Server
import asyncio

class Poll(commands.Cog):
    """
    Un cog Discord afin de cr√©er et g√©rer des sondages interactifs.
    
    Attributes:
        bot: Instance du bot Discord.
    """

    def __init__(self, bot):
        self.bot = bot  


    @app_commands.command(name='question', description='Cr√©e une question et ajoute des r√©actions personnalis√©es')
    @app_commands.describe(reactions='(optionnal)')
    async def question(self, interaction: discord.Interaction, reactions: str = None):
        """
        Cr√©e une question interactive et envoie un modal pour recueillir la r√©ponse de l'utilisateur.
        Les r√©actions personnalis√©es peuvent √™tre sp√©cifi√©es comme une cha√Æne de caract√®res optionnelle.
        
        Args:
            interaction: L'interaction Discord qui d√©clenche la commande.
            reactions: Une cha√Æne de caract√®res sp√©cifiant les r√©actions √† ajouter √† la question (optionnel).
        """
        await interaction.response.send_modal(Question(reactions))

    @app_commands.command(name='weather', description='Cr√©e un sondage m√©t√©o')
    @app_commands.describe(delay="Delais d'envoi du resultat en seconde, par d√©faut 600s (10 min)")
    async def weather(self, interaction: discord.Interaction, delay: int = 600):
        """
        Lance un sondage interactif avec un d√©lai avant d'envoyer le r√©sultat.
        
        Args:
            interaction: L'interaction Discord qui d√©clenche la commande.
            delay: Le d√©lai en secondes avant d'envoyer le r√©sultat du sondage (par d√©faut 600 secondes soit 10 minutes).
        """
        response_embed = Embed.get(
            title = 'Quel est la m√©t√©o du jour ?',
            description = '''
            üåû : soleil
            üå•Ô∏è : moyen
            ‚òÅÔ∏è : nuageux
            üå©Ô∏è : eclair
            '''
        )
        reactions = ['üåû', 'üå•Ô∏è', '‚òÅÔ∏è', 'üå©Ô∏è']

        # envoi du sondage
        message = await Event.send_question_with_reactions(
            interaction = interaction,
            embed=response_embed,
            reactions=reactions
        )

        await asyncio.sleep(delay)

        # recuperation du message rafraichit (pour les nouvelles reactions)
        message = await Server.find_message_by_message_id(
            interaction=interaction,
            message_id=message.content.id
        )
        # envoi des resultats 
        await Event.send_weather_results(
            interaction=interaction,
            message=message
        )


async def setup(bot):
    cog = Poll(bot)
    await bot.add_cog(cog)
    bot.tree.add_command(cog.question, guild=discord.Object(id=bot.guild_id))
    bot.tree.add_command(cog.weather, guild=discord.Object(id=bot.guild_id))